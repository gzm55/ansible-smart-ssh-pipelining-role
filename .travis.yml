---
language: python
python: "2.7"

sudo: required

# Use the docker for testing
services:
  - docker

# Install ansible
addons:
  apt:
    packages:
    - python-pip
    - sshpass

install:
  - which ssh-keygen && which ssh-agent && which ssh-add && which sshpass

  # Install ansible
  - pip install ansible

  # Check ansible version
  - ansible --version

  # Install python module and role dependencies
  - test -f requirements.txt && pip install -r requirements.txt
  - test -f requirements.yml && ansible-galaxy install -p tests/roles -r requirements.yml

  # Start a sshd container for testing
  # - listen on localhost:4848
  # - enable root login
  # - root:root123456 and pubkey
  # - userA:userA123456 and pubkey
  - docker pull danielguerra/alpine-sshd
  - docker rm -f alpine-sshd || true
  - docker run -p 4848:22 --name alpine-sshd --hostname alpine-sshd -d danielguerra/alpine-sshd sh -c 'echo "PermitRootLogin yes" >> /etc/ssh/sshd_config && exec /usr/sbin/sshd -D'
  - echo -e "root123456\nroot123456" | docker exec -i alpine-sshd passwd
  - docker exec -i alpine-sshd sh -c 'apk update; apk add sudo; adduser userA'
  - echo -e "userA123456\nuserA123456" | docker exec -i alpine-sshd passwd userA
  - ssh-keygen -N '' -f ~/.ssh/id_rsa
  - cat ~/.ssh/id_rsa.pub | docker exec -i alpine-sshd sh -c 'cd; umask 077; mkdir -p .ssh; cat >> .ssh/authorized_keys'
  - docker exec -i alpine-sshd sh -c 'sudo -u userA sh -c "cd; umask 077; mkdir -p .ssh; touch .ssh/known_hosts"'
  - docker exec -i alpine-sshd sh -c 'cat ~/.ssh/known_hosts >> /home/userA/.ssh/known_hosts'
  - ssh-keygen -f ~/.ssh/known_hosts -R [localhost]:4848 || true
  - sleep 2 && ssh-keyscan -p 4848 localhost >> ~/.ssh/known_hosts

  - export ANSIBLE_ROLES_PATH=$PWD/..

script:
  - set -e

  # Basic role syntax check
  - ansible-playbook tests/test*.yml -i tests/inventory --syntax-check

  - echo =====[round 1][overriding detecting]=====
  - printf '[ssh_connection]\npipelining=False' >ansible.cfg
  - ansible-playbook tests/test.yml -i tests/inventory
  - echo >ansible.cfg
  - ansible-playbook tests/test.yml -i tests/inventory --limit testserverB
  - ANSIBLE_SSH_PIPELINING=False ansible-playbook tests/test.yml -i tests/inventory

  - echo =====[round 2][no sudo command]=====
  - ansible-playbook tests/test-no-sudo.yml -i tests/inventory

#notifications:
#  webhooks: https://galaxy.ansible.com/api/v1/notifications/
