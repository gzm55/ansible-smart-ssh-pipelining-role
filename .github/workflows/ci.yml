---
name: ci workflow
"on": push

env:
  ANSIBLE_ROLES_PATH: ".."

jobs:
  test-job:
    name: test the role on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: print versions
      run: |
        set -x
        uname -a
        id
        python3 --version
        pip3 --version
        ansible --version
        docker version

    - name: prepare tests
      run: |
        set -x
        sudo apt install sshpass
        sshpass -V
        pip3 install -r requirements.txt

    - name: syntax check
      run: ansible-playbook tests/test.yml -i tests/inventory --syntax-check

    - name: prepare sshd container
      run: |
        set -x
        docker pull hermsi/alpine-sshd

        # Start a sshd container for testing
        # - listen on localhost:4848
        # - enable root login
        # - enable pubkey for user root and userA
        ssh-keygen -N '' -f ~/.ssh/id_rsa
        cp ~/.ssh/id_rsa.pub authorized_keys
        docker run -p 4848:22 --name alpine-sshd --hostname alpine-sshd -d -e ROOT_KEYPAIR_LOGIN_ENABLED=true -v `pwd`/authorized_keys:/root/.ssh/authorized_keys -e SSH_USERS="userA:1000:1000" -v `pwd`/authorized_keys:/conf.d/authorized_keys/userA:ro hermsi/alpine-sshd
        docker exec -i alpine-sshd sh -c 'apk update'
        ssh-keygen -f ~/.ssh/known_hosts -R [localhost]:4848 || true
        sleep 2
        ssh-keyscan -p 4848 localhost >> ~/.ssh/known_hosts
        ssh -C -o Port=4848 -o KbdInteractiveAuthentication=no -o PreferredAuthentications=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o PasswordAuthentication=no -tt userA@localhost echo 'sshd works'

    - name: TEST - overriding detecting
      run: |
        set -x
        printf '[defaults]\npipelining=False' >ansible.cfg
        ansible-playbook -vvvvv --user root tests/test.yml -i tests/inventory
        rm ansible.cfg
        ansible-playbook --user root tests/test.yml -i tests/inventory --limit testserverB
        ANSIBLE_SSH_PIPELINING=False ansible-playbook --user root tests/test.yml -i tests/inventory

  lint-job:
    name: lint codes
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: prepare lint
      run: |
        pip3 install -r requirements.txt
        pip3 install ansible-lint
        ansible-lint --version
    - name: lint
      run: ansible-lint --show-relpath

  deploy-job:
    name: deploy the role on tag
    runs-on: ubuntu-22.04
    needs: [test-job, lint-job]
    if: github.ref_type == 'tag'
    steps:
    - uses: actions/checkout@v3
    - name: publish the role to Galaxy
      uses: robertdebock/galaxy-action@1.2.1
      with:
        galaxy_api_key: ${{ secrets.GALAXY_API_KEY }}
        git_branch: ${{ github.ref_name }}
